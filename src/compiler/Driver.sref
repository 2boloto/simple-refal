//FROM Lexer
$EXTERN LexFolding;

//FROM LibraryEx
$EXTERN Map, Fetch, Seq, SaveFile;

//FROM Error
$EXTERN EL-Create, EL-Destroy;

//FROM Generator
$EXTERN GenProgram;

//FROM HighLevelRASL
$EXTERN HighLevelRASL;

//FROM HighLevelRASL-OptPattern
$EXTERN HighLevelRASL-OptPattern;

//FROM HighLevelRASL-OptResult
$EXTERN HighLevelRASL-OptResult;

//FROM LowLevelRASL
$EXTERN LowLevelRASL;

//FROM Parser
$EXTERN ParseProgram;

/**
  <CompileFile s.GenMode s.Opt (e.SrcName) e.OutputName>
    == #Success e.OutputName
    == #Fails

  s.GenMode ::= #OnlyDirect | #OnlyInterpret | #Both
  s.Opt ::= #OptNone | #OptPattern | #OptResult
*/
$ENTRY CompileFile {
  s.GenMode s.Opt (e.SrcName) e.OutputName =
    <Fetch
      <LexFolding e.SrcName>
      <Seq
        {
          e.LexFolding =
            <ParseProgram
              <EL-Create e.SrcName> e.LexFolding
            >;
        }
        {
          t.ErrorList e.AST =
            <Fetch
              <EL-Destroy t.ErrorList>
              {
                #EL-NoErrors =
                  <Fetch
                    e.AST
                    <Seq
                      <SelectRASL s.Opt>
                      (LowLevelRASL <SelectGenMode s.GenMode s.Opt>)
                      GenProgram
                      (SaveFile (e.OutputName))
                    >
                  >
                  #Success e.OutputName;

                #EL-HasErrors =
                  #Fails;
              }
            >;
        }
      >
    >;
}

SelectRASL {
  #OptNone = HighLevelRASL;
  #OptPattern = HighLevelRASL-OptPattern;
  #OptResult = HighLevelRASL-OptResult;
}

SelectGenMode {
  s.GenMode #OptNone = s.GenMode;
  s.GenMode #OptPattern = #OnlyDirect;
  s.GenMode #OptResult = #OnlyDirect;
}
