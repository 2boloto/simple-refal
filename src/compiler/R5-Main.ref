*$FROM R5-Utils
$EXTERN R5-Builtins;

*$FROM R5-Lexer
$EXTERN R5-Scan;

*$FROM R5-Parser
$EXTERN R5-Parse;

*$FROM R5-Transformer
$EXTERN R5-Transform;

*$FROM R5-Plainer
$EXTERN R5-Plain;

$ENTRY R5-Preprocess {
  e.Source
    , <R5-Parse <R5-Scan e.Source>>
    : {
        Success e.Functions =
          Success <R5-Plain <AddMu <R5-Transform e.Functions>>>;

        Fails e.Errors = Fails e.Errors;
      };
}

AddMu {
  e.AST
    , <R5-Builtins> : e.Builtins
    /* Пока они косвенно не вызываются */
    , <DoAddMu-Names e.Builtins> : e.MuBuiltins
    , <DoAddMu-AST () e.AST> : (e.MuAST) e.AST
    = (Function NoPos ('Mu') Local e.MuBuiltins e.MuAST) e.AST;
}

DoAddMu-Names {
  /* Служебное имя, пропускаем */
  (e.NextName '$$') e.Tail = <DoAddMu-Names e.Tail>;

  /* Пустое имя, пропускаем */
  () e.Tail = <DoAddMu-Names e.Tail>;

  (e.NextName) e.Tail = <MuSentence e.NextName> <DoAddMu-Names e.Tail>;
  /* пусто */ = /* пусто */;
}

MuSentence {
  e.Name
    = <MuSentence-Special e.Name>
      (((Compound e.Name) <Var-eX>) RETURN (<Call-eX e.Name>))
      (((Brackets <Chars e.Name>) <Var-eX>) RETURN (<Call-eX e.Name>));
}

Var-eX {
  = (Variable NoPos 'eX');
}

Call-eX {
  e.Name = (Call NoPos (e.Name) <Var-eX>);
}

MuSentence-Special {
  s.Name, '+-*/%?' : e.Chars-B s.Name e.Chars-E
    = (((Char s.Name) <Var-eX>) RETURN (<Call-eX s.Name>));

  e.OtherName = /* пусто */;
}

Chars {
  s.Char e.Chars = (Char s.Char) <Chars e.Chars>;
  /* пусто */ = /* пусто */;
}

DoAddMu-AST {
  (e.MuSentences) e.Tail (Extern e.Names)
    = <DoAddMu-AST (<DoAddMu-Names e.Names> e.MuSentences) e.Tail>
      (Extern e.Names);

  (e.MuSentences) e.Tail (Function t.SrcPos (e.Name) s.Scope e.Sentences)
    = <DoAddMu-AST (<MuSentence e.Name> e.MuSentences) e.Tail>
      (Function t.SrcPos (e.Name) s.Scope e.Sentences);

  (e.MuSentences) e.Tail (SpecialComment t.SrcPos e.Text)
    = <DoAddMu-AST (e.MuSentences) e.Tail>
      (SpecialComment t.SrcPos e.Text);

  (e.MuSentences) /* пусто */ = (e.MuSentences);
}
