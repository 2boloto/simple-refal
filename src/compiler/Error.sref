//FROM Library
$EXTERN WriteLine, StrFromInt;

//FROM Lexer
$EXTERN StrFromToken;

//FROM LibraryEx
$EXTERN Map, Sort;

/**
  Внутренний формат:
  [ErrorList (e.FileName) (s.LineNumber e.Message)*]
  s.LineNumber ::= #NoLine | s.Number
*/
$ENUM ErrorList;

$ENTRY EL-Create {
  e.FileName = [ErrorList (e.FileName)];
}

$ENTRY EL-AddError {
  [ErrorList (e.FileName) e.Errors] e.Message =
    [ErrorList (e.FileName) e.Errors (#NoLine e.Message)];
}

$ENTRY EL-AddErrorAt {
  [ErrorList (e.FileName) e.Errors] s.LineNumber e.Message =
    [ErrorList (e.FileName) e.Errors (s.LineNumber e.Message)];
}

$ENTRY EL-AddUnexpected {
  t.ErrorList (#TkError s.LineNumber e.Message) e.Expected =
    <EL-AddErrorAt
      t.ErrorList s.LineNumber e.Message
    >;

  t.ErrorList (#TkUnexpected s.LineNumber e.Unexpected) e.Expected =
    <EL-AddErrorAt
      t.ErrorList s.LineNumber
      'Unknown characters "' e.Unexpected '"'
    >;

  t.ErrorList (s.Unexpected s.LineNumber e.Info) e.Expected =
    <EL-AddErrorAt
      t.ErrorList s.LineNumber
      'Unexpected ' <StrFromToken s.Unexpected e.Info>
      ', expected ' e.Expected
    >;
}

$ENTRY EL-Destroy {
  [ErrorList (e.FileName)] = #EL-NoErrors;

  [ErrorList (e.FileName) e.Errors] =
    <Map
      {
        (#NoLine e.Message) =
          <WriteLine '  ERROR: ' e.Message>;

        (s.LineNumber e.Message) =
          <WriteLine
            e.FileName ':' <StrFromInt s.LineNumber> ':ERROR: ' e.Message
          >;
      }
      <Sort e.Errors>
    >
    #EL-HasErrors;
}
