/**
  <ParseCommandLine e.Arguments>
    == s.CommandLineInfo #CompileList (e.Folders) t.FoundedFile*
    == s.CommandLineInfo #CompileToTarget (e.Folders) (e.Source) (e.Target)
    == (#CmdLineError e.Message)

  t.FoundedFile ::= (e.FileName)

  <s.CommandLineInfo #CompileCommand>
    == #None
    == e.Command

  <s.CommandLineInfo #ErrorFile>
    == #None
    == e.FileName
*/
$ENTRY ParseCommandLine {
  e.Arguments =
    <DoParseCommandLine
      <CollectorObject (/* folders */) /* files */> e.Arguments
    >;
}

DoParseCommandLine {
  s.Collector ('-c') (e.CompileCommand) e.Arguments =
    <DoParseCommandLine
      <s.Collector #AddCompileCommand e.CompileCommand> e.Arguments
    >;

  s.Collector ('-c') =
    (#CmdLineError 'After option ''-c'' expected C++ compiler command line');

  s.Collector ('-e') (e.ErrorFile) e.Arguments =
    <DoParseCommandLine
      <s.Collector #AddErrorFile e.ErrorFile> e.Arguments
    >;

  s.Collector ('-e') =
    (#CmdLineError 'After option ''-e'' expected name of error flag file');

  s.Collector ('-d') (e.Directory) e.Arguments =
    <DoParseCommandLine
      <s.Collector #AddFolder e.Directory> e.Arguments
    >;

  s.Collector ('-d') =
    (#CmdLineError 'After option ''-d'' expected find directory');

  s.Collector ('-o') (e.OutputFile) e.Arguments =
    <DoParseCommandLine
      <s.Collector #SetOutput e.OutputFile> e.Arguments
    >;

  s.Collector ('--') e.Arguments =
    <DoParseFileNamesOnly
      s.Collector e.Arguments
    >;

  s.Collector (e.NextFileName) e.Arguments =
    <DoParseCommandLine
      <s.Collector #AddFile e.NextFileName> e.Arguments
    >;

  s.Collector = <s.Collector #GetInfo>;
}

DoParseFileNamesOnly {
  s.Collector (e.NextFileName) e.Files =
    <DoParseFileNamesOnly
      <s.Collector #AddFile e.NextFileName> e.Files
    >;

  s.Collector = <s.Collector #GetInfo>;
}

//------------------------------------------------------------------------------

CollectorObject {
  (e.Folders) e.Files =
    {
      #AddCompileCommand e.Command =
        <Collector-Compiler (e.Folders) (e.Files) e.Command>;

      #AddErrorFile e.ErrorFile =
        <Collector-ErrorFile (e.Folders) (e.Files) e.ErrorFile>;

      #AddFile e.FileName =
        <CollectorObject (e.Folders) e.Files (e.FileName)>;

      #AddFolder e.FolderName =
        <CollectorObject (e.Folders (e.FolderName)) e.Files>;

      #GetInfo =
        {
          #CompileCommand = #None;
          #ErrorFile = #None;
        }
        #CompileList (e.Folders) e.Files;
    };
}

Collector-Compiler {
  (e.Folders) (e.Files) e.Command =
    {
      #AddCompileCommand e.NewCommand = <Collector-Error-CC>;

      #AddErrorFile e.ErrorFile =
        <Collector-Compiler-ErrorFile
          (e.Folders) (e.Files) (e.Command) (e.ErrorFile)
        >;

      #AddFile e.FileName =
        <Collector-Compiler
          (e.Folders) (e.Files (e.FileName)) e.Command
        >;

      #AddFolder e.FolderName =
        <Collector-Compiler
          (e.Folders (e.FolderName)) (e.Files) e.Command
        >;

      #GetInfo =
        {
          #CompileCommand = e.Command;
          #ErrorFile = #None;
        }
        #CompileList (e.Folders) e.Files;
    };
}

Collector-Error-CC {
  = <Collector-Error 'Multiple declaration of C++ compiler command line'>;
}

Collector-ErrorFile {
  (e.Folders) (e.Files) e.ErrorFile =
    {
      #AddCompileCommand e.Command =
        <Collector-Compiler-ErrorFile
          (e.Folders) (e.Files) (e.Command) (e.ErrorFile)
        >;

      #AddErrorFile e.ErrorFile = <Collector-Error-EF>;

      #AddFile e.FileName =
        <Collector-ErrorFile
          (e.Folders) (e.Files (e.FileName)) e.ErrorFile
        >;

      #AddFolder e.FolderName =
        <Collector-ErrorFile
          (e.Folders (e.FolderName)) (e.Files) e.ErrorFile
        >;

      #GetInfo =
        {
          #CompileCommand = #None;
          #ErrorFile = e.ErrorFile;
        }
        #CompileList (e.Folders) e.Files;
    };
}

Collector-Error-EF {
  = <Collector-Error 'Multiple declaration of error flag file name'>;
}

Collector-Compiler-ErrorFile {
  (e.Folders) (e.Files) (e.Command) (e.ErrorFile) =
    {
      #AddCompileCommand e.NewCommand = <Collector-Error-CC>;

      #AddErrorFile e.NewFile = <Collector-Error-EF>;

      #AddFile e.FileName =
        <Collector-Compiler-ErrorFile
          (e.Folders) (e.Files (e.FileName)) (e.Command) (e.ErrorFile)
        >;

      #AddFolder e.FolderName =
        <Collector-Compiler-ErrorFile
          (e.Folders (e.FolderName)) (e.Files) (e.Command) (e.ErrorFile)
        >;

      #GetInfo =
        {
          #CompileCommand = e.Command;
          #ErrorFile = e.ErrorFile;
        }
        #CompileList (e.Folders) e.Files;
    };
}

Collector-Error {
  e.Message =
    {
      #AddCompileCommand e.Command = <Collector-Error e.Message>;

      #AddErrorFile e.ErrorFile = <Collector-Error e.Message>;

      #AddFile e.FileName = <Collector-Error e.Message>;

      #AddFolder e.FolderName = <Collector-Error e.Message>;

      #GetInfo (e.Folders) e.Files = (#CmdLineError e.Message);
    };
}